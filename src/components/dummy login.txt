import * as React from 'react';
import validator from "validator";
import Avatar from '@mui/material/Avatar';
import CssBaseline from '@mui/material/CssBaseline'; import Typography from '@mui/material/Typography';
import Container from '@mui/material/Container';
import { createTheme, ThemeProvider } from '@mui/material/styles';
import Box from '@mui/material/Box';
import Link from '@mui/material/Link';
import LockOutlinedIcon from '@mui/icons-material/LockOutlined';
import TextField from '@mui/material/TextField';
import Grid from '@mui/material/Grid';
import Button from '@mui/material/Button';
import { useState } from 'react';


function Copyright(props) {
    return (
        <Typography variant="body2" color="text.secondary" align="center" {...props}>
            {'Copyright Â© '}
            <Link color="inherit" href="https://mui.com/">
                Your Website
            </Link>{' '}
            {new Date().getFullYear()}
            {'.'}
        </Typography>
    );
}

const defaultTheme = createTheme();
export default function Login() {

    const [email, setEmail] = useState('');
    const [password, setPassword] = useState('');
    const [mailError, setError] = useState(null);
    const [errorMessage, setErrorMessage] = useState('')
    const [errorMessages, setErrorMessages] = useState({});
    const [isSubmitted, setIsSubmitted] = useState(false);

    // User Login info
    const database = [
        { username: "adminworks@gmail.com", password: "*Tammana3" },
    ];

    // const errors = {
    //     uname: "Invalid E mail-Id",
    //     password: "Invalid Password",
    // };

    const handleSubmit = (event) => {
        //Prevent page reload
        event.preventDefault();
        console.log('mail and password',email,password)
        setError(null);
        if (isValidEmail(email)) {
            console.log('Email is valid');
        } else { setError('Email is invalid'); }
        if (isValidPass(password)) {
            console.log('Strong Password');
        } else { setErrorMessage('Is Not Strong Password') }
        var { uname, password } = document.forms[0];
        // Find user login info
        const userData = database.find((user) => user.username === uname.value);
        // Compare user info
        // if (userData) {
        //     if (userData.password !== password.value) {
        //         // Invalid password
        //         setErrorMessages({ name: "password", message: errors.password });
        //     } else {
        //         setIsSubmitted(true);
        //     }
        // } else {
        //     // Username not found
        //     setErrorMessages({ name: "uname", message: errors.uname });
        // }
    };

    // Generate JSX code for error message
    // const renderErrorMessage = (name) =>
    //     name === errorMessages.name && (
    //         <div className="error">{errorMessages.message}</div>
    // );

    function isValidEmail(email) {
        return /\S+@\S+\.\S+/.test(email);
    }

    function isValidPass(value) {
        if (validator.isStrongPassword(value, {
            minLength: 8, minLowercase: 1, minUppercase: 1, minNumbers: 1, minSymbols: 1
        })) { return true
        } else { setErrorMessage('Is Not Strong Password') }
    }

    const handlePassword=(e)=>{
        console.log('pass be',e.currentTarget.value)
        setPassword(e.currentTarget.value)
    }


    return (
        <ThemeProvider theme={defaultTheme}>
            <Container component="main" maxWidth="xs">
                <CssBaseline />
                <Box sx={{ marginTop: 8, display: 'flex', flexDirection: 'column', alignItems: 'center', }}>
                    <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}><LockOutlinedIcon /></Avatar>
                    <Typography component="h1" variant="h5">Login</Typography>
                    <Box component="form" onSubmit={handleSubmit} noValidate sx={{ mt: 1 }}>
                        <TextField margin="normal" required fullWidth label="Email Address"  id="email" name="email" autoComplete="email" autoFocus value={email} onChange={e => setEmail(e.currentTarget.value)} />
                        {/*{renderErrorMessage("email")}*/}
                        <TextField margin="normal" required fullWidth label="Password" id="password" name="password" value={password} onChange={handlePassword}/>
                        {/* <TextField margin="normal" required fullWidth id="password" label="Password" name="password" type="password" value={password} onChange={e => setPassword(e.target.value)}/>*/}
                        {/*renderErrorMessage("password")*/}
                        <Button type="submit" fullWidth variant="contained" sx={{ mt: 3, mb: 2 }}> Login </Button>
                        <Grid container>
                            <Grid item xs>
                                <Link href="#" variant="body2"> Forgot password? </Link>
                            </Grid>
                        </Grid>
                    </Box>
                    {mailError && <h2 style={{ color: 'red' }}>{mailError}</h2>}
                    {errorMessage === '' ? null : <span style={{ fontWeight: 'bold', color: 'red', }}>{errorMessage}</span>}
                </Box>
                <Copyright sx={{ mt: 8, mb: 4 }} />
            </Container>
        </ThemeProvider>
    );
}